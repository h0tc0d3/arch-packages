pkgbase=gtk4+clang
pkgname=(gtk4+clang gtk-update-icon-cache+clang gtk4-docs+clang gtk4-demos+clang)
pkgver=4.6.7
pkgrel=1
epoch=1
pkgdesc="GObject-based multi-platform GUI toolkit"
arch=(x86_64)
url="https://www.gtk.org/"
license=(LGPL)
depends=(glib2 cairo pango fribidi gdk-pixbuf2 libpng libtiff libjpeg libepoxy
  libgl libegl harfbuzz libxkbcommon graphene iso-codes tracker3
  libcolord wayland libxrandr libx11 libxrender libxi libxext libxcursor
  libxdamage libxfixes fontconfig libxinerama libcloudproviders libcups
  gst-plugins-bad-libs librsvg dconf shared-mime-info desktop-file-utils
  adwaita-icon-theme cantarell-fonts)
makedepends=(git meson gi-docgen shaderc sassc gobject-introspection docbook-xsl
  wayland-protocols python-gobject python-docutils)
_commit=42b14ce5f20fc81b85aa3e3e0036fbb2d1476137 # tags/4.6.7^0
source=(
  "git+https://gitlab.gnome.org/GNOME/gtk.git#commit=${_commit}"
  gtk-update-icon-cache.{hook,script} gtk4-querymodules.hook
)
sha256sums=('SKIP'
  '2d435e3bec8b79b533f00f6d04decb1d7c299c6e89b5b175f20be0459f003fe8'
  'f1d3a0dbfd82f7339301abecdbe5f024337919b48bd0e09296bb0e79863b2541'
  'cd8e607eddd9941f279084e1d15309941423d26cca1897f43524a02e58e48816'
)

_extra_lto_flag=""

prepare() {

  if clang --version 2>/dev/null | grep -iq "clang\s*version\s*[0-9]" && ld.lld --version 2>/dev/null | grep -iq "LLD\s*[0-9]"; then
    _extra_lto_flag='-D b_lto_mode=thin'
  fi

  cd "${srcdir:?}/gtk" || (
    echo -e "\E[1;31mCan't cd to ${srcdir:?}/gtk directory! Prepare Failed! \E[0m"
    exit 1
  )

}

pkgver() {

  cd "${srcdir:?}/gtk" || (
    echo -e "\E[1;31mCan't cd to ${srcdir:?}/gtk directory! PkgVer Failed! \E[0m"
    exit 1
  )

  git describe --tags | sed 's/[^-]*-g/r&/;s/-/+/g'

}

build() {

  CFLAGS+=" -DG_DISABLE_CAST_CHECKS -Wno-macro-redefined"
  OBJCOPY=objcopy meson setup gtk build \
    --prefix /usr \
    --libexecdir lib \
    --sbindir bin \
    --auto-features enabled \
    --wrap-mode nodownload \
    -D debug=false \
    -D optimization=2 \
    -D b_ndebug=true \
    -D b_lto=true ${_extra_lto_flag} \
    -D b_pie=true \
    -D broadway-backend=true \
    -D cloudproviders=enabled \
    -D tracker=enabled \
    -D colord=enabled \
    -D gtk_doc=true \
    -D man-pages=true

  meson compile -C build

}

check() (

  export XDG_RUNTIME_DIR="${PWD}/runtime-dir" WAYLAND_DISPLAY=wayland-5

  mkdir -p -m 700 "${XDG_RUNTIME_DIR}"
  weston --backend=headless-backend.so --socket=${WAYLAND_DISPLAY} --idle-time=0 &
  _w=$!

  trap "kill ${_w}; wait" EXIT

  meson test -C build --print-errorlogs || true

)

_pick() {

  local p="$1" f d
  shift
  for f; do
    d="${srcdir:?}/$p/${f#${pkgdir:?}/}"
    mkdir -p "$(dirname "$d")"
    mv "$f" "$d"
    rmdir -p --ignore-fail-on-non-empty "$(dirname "$f")"
  done

}

package_gtk4+clang() {

  depends+=(gtk-update-icon-cache)
  provides=(gtk4 "gtk4=${pkgver}" libgtk-4.so)
  conflicts=(gtk4)

  meson install -C build --destdir "${pkgdir:?}"

  install -Dm644 /dev/stdin "${pkgdir:?}/usr/share/gtk-4.0/settings.ini" <<END
[Settings]
gtk-icon-theme-name = Adwaita
gtk-theme-name = Adwaita
gtk-font-name = Cantarell 11
END

  install -Dt "${pkgdir:?}/usr/share/libalpm/hooks" -m644 gtk4-querymodules.hook

  cd "${pkgdir:?}" || (
    echo -e "\E[1;31mCan't cd to ${pkgdir} directory! Package Failed! \E[0m"
    exit 1
  )

  _pick guic usr/bin/gtk4-update-icon-cache
  _pick guic usr/share/man/man1/gtk4-update-icon-cache.1

  _pick docs usr/share/doc

  _pick demo usr/bin/gtk4-{demo,demo-application,icon-browser,print-editor,widget-factory}
  _pick demo usr/share/applications/org.gtk.{Demo,IconBrowser,PrintEditor,WidgetFactory}4.desktop
  _pick demo usr/share/glib-2.0/schemas/org.gtk.Demo4.gschema.xml
  _pick demo usr/share/icons/hicolor/*/apps/org.gtk.{Demo,IconBrowser,PrintEditor,WidgetFactory}4[-.]*
  _pick demo usr/share/man/man1/gtk4-{demo,demo-application,icon-browser,widget-factory}.1
  _pick demo usr/share/metainfo/org.gtk.{Demo,IconBrowser,PrintEditor,WidgetFactory}4.appdata.xml

}

package_gtk-update-icon-cache+clang() {

  pkgdesc="GTK icon cache updater"
  depends=(gtk4+clang gdk-pixbuf2 librsvg hicolor-icon-theme)
  provides=(gtk-update-icon-cache "gtk-update-icon-cache=${pkgver}")
  conflicts=(gtk-update-icon-cache)

  mv guic/* "${pkgdir:?}"
  ln -s gtk4-update-icon-cache "${pkgdir:?}/usr/bin/gtk-update-icon-cache"
  ln -s gtk4-update-icon-cache.1 "${pkgdir:?}/usr/share/man/man1/gtk-update-icon-cache.1"

  install -Dt "${pkgdir:?}/usr/share/libalpm/hooks" -m644 gtk-update-icon-cache.hook
  install -D gtk-update-icon-cache.script "${pkgdir:?}/usr/share/libalpm/scripts/gtk-update-icon-cache"

}

package_gtk4-docs+clang() {

  pkgdesc+=" (documentation)"
  depends=(gtk4+clang)
  provides=(gtk4-docs "gtk4-docs=${pkgver}")
  conflicts=(gtk4-docs)

  mv docs/* "${pkgdir:?}"

}

package_gtk4-demos+clang() {

  pkgdesc+=" (demo applications)"
  depends=(gtk4+clang)
  provides=(gtk4-demos "gtk4-demos=${pkgver}")
  conflicts=(gtk4-demos)

  mv demo/* "${pkgdir:?}"

}
