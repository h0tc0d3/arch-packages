pkgname=js91+clang
pkgver=91.11.0
pkgrel=1
pkgdesc="JavaScript interpreter and libraries - Version 91"
arch=(x86_64)
url="https://spidermonkey.dev/"
license=(MPL)
provides=('js91' "js91=${pkgver}")
conflicts=('js91')
depends=(gcc-libs readline zlib sh)
makedepends=(zip autoconf2.13 python-setuptools python-psutil rust llvm clang lld)
checkdepends=(mercurial git)
_relver=${pkgver}esr
source=("https://archive.mozilla.org/pub/firefox/releases/${_relver}/source/firefox-${_relver}.source.tar.xz"{,.asc})
sha256sums=('e59bbe92ee1ef94936ce928324253e442748d62b5777bc0846ad79ed4a2a05a4'
  'SKIP')
validpgpkeys=('14F26682D0916CDD81E37B6D61B7B526D98F0353') # Mozilla Software Releases <release@mozilla.com>

# Make sure the duplication between bin and lib is found
COMPRESSZST+=(--long)

_llvm=0

prepare() {

  if clang --version 2>/dev/null | grep -iq "clang\s*version\s*[0-9]" && ld.lld --version 2>/dev/null | grep -iq "LLD\s*[0-9]"; then
    _llvm=1
  fi

  mkdir mozbuild

  cd "${srcdir:?}/firefox-${pkgver}" || (
    echo -e "\E[1;31mCan't cd to ${srcdir:?}/firefox-${pkgver} directory! Prepare Failed! \E[0m"
    exit 1
  )

  cat >../mozconfig <<END
ac_add_options --enable-application=js
mk_add_options MOZ_OBJDIR=${PWD@Q}/obj
ac_add_options --prefix=/usr
ac_add_options --enable-release
ac_add_options --enable-hardening
ac_add_options --enable-optimize
ac_add_options --enable-rust-simd
ac_add_options --enable-linker=lld
ac_add_options --disable-bootstrap
ac_add_options --disable-debug
ac_add_options --disable-debug-symbols
ac_add_options --disable-jemalloc
ac_add_options --disable-strip
# System libraries
ac_add_options --with-system-zlib
ac_add_options --without-system-icu
# Features
ac_add_options --enable-readline
ac_add_options --enable-shared-js
ac_add_options --enable-tests
ac_add_options --with-intl-api
END

}

build() {

  cd "${srcdir:?}/firefox-${pkgver}" || (
    echo -e "\E[1;31mCan't cd to ${srcdir:?}/firefox-${pkgver} directory! Build Failed! \E[0m"
    exit 1
  )

  if [[ ${_llvm} -eq 1 ]]; then

    CFLAGS="${CFLAGS} -flto=thin"
    CXXFLAGS="${CXXFLAGS} -flto=thin"
    LDFLAGS="${LDFLAGS} -fuse-ld=lld"

  fi

  CFLAGS="${CFLAGS} -fno-semantic-interposition"
  CXXFLAGS="${CXXFLAGS} -fno-semantic-interposition"
  LDFLAGS="${LDFLAGS} -Wl,-Bsymbolic-functions"

  export MOZ_NOSPAM=1
  export MOZBUILD_STATE_PATH="$srcdir/mozbuild"
  export MACH_USE_SYSTEM_PYTHON=1

  # Do 3-tier PGO
  echo "Building instrumented JS..."
  cat >.mozconfig ../mozconfig - <<END
ac_add_options --enable-profile-generate=cross
END
  ./mach build

  echo "Profiling instrumented JS..."
  (
    local js="${PWD}/obj/dist/bin/js"
    export LLVM_PROFILE_FILE="${PWD}/js-%p-%m.profraw"

    cd js/src/octane
    "${js}" run.js

    cd ../../../third_party/webkit/PerformanceTests/ARES-6
    "${js}" cli.js

    cd ../SunSpider/sunspider-0.9.1
    "${js}" sunspider-standalone-driver.js
  )

  llvm-profdata merge -o merged.profdata *.profraw

  stat -c "Profile data found (%s bytes)" merged.profdata
  test -s merged.profdata

  echo "Removing instrumented JS..."
  ./mach clobber

  echo "Building optimized JS..."
  cat >.mozconfig ../mozconfig - <<END
ac_add_options --enable-lto=cross
ac_add_options --enable-profile-use=cross
ac_add_options --with-pgo-profile-path=${PWD@Q}/merged.profdata
END
  ./mach build

}

check() {

  jstests_extra_args=(
    --format=none
    --exclude-random
    --wpt=disabled
  )

  jittest_extra_args=(
    --format=none
    --timeout 300
  )

  jittest_test_args=(
    basic
  )

  cd "${srcdir:?}/firefox-${pkgver}/obj" || (
    echo -e "\E[1;31mCan't cd to ${srcdir:?}/firefox-${pkgver}/obj directory! Check Failed! \E[0m"
    exit 1
  )
  make -C js/src check-jstests check-jit-test \
    JSTESTS_EXTRA_ARGS="${jstests_extra_args[*]}" \
    JITTEST_EXTRA_ARGS="${jittest_extra_args[*]}" \
    JITTEST_TEST_ARGS="${jittest_test_args[*]}"

}

package() {

  cd "${srcdir:?}/firefox-${pkgver}/obj" || (
    echo -e "\E[1;31mCan't cd to ${srcdir:?}/firefox-${pkgver}/obj directory! Package Failed! \E[0m"
    exit 1
  )

  make DESTDIR="${pkgdir:?}" install

  rm "${pkgdir:?}/usr/lib/"*.ajs
  find "${pkgdir:?}/usr/"{lib/pkgconfig,include} -type f -exec chmod -c a-x {} +

}
