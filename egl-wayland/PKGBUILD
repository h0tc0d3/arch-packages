pkgname=egl-wayland+clang
pkgver=1.1.11
pkgrel=2
epoch=2
pkgdesc="EGLStream-based Wayland external platform"
arch=(x86_64)
url=https://github.com/NVIDIA/egl-wayland
license=(MIT)
provides=('egl-wayland' "egl-wayland=${pkgver}" libnvidia-egl-wayland.so)
conflicts=('egl-wayland')
depends=(wayland eglexternalplatform 'libglvnd>=1.3.4')
makedepends=(meson git)
_commit=1bac4260aa89c4938246798f3a141500ed9daa10 # tags/1.1.11
source=(
  "git+${url}#commit=${_commit}"
  10_nvidia_wayland.json
)
sha256sums=('SKIP'
  '5cccf1905a266e8e34d5ad4aad4be85390e60b1a0850a29dd9d64adc641de412')

_extra_lto_flag=""

prepare() {

  if clang --version 2>/dev/null | grep -iq "clang\s*version\s*[0-9]" && ld.lld --version 2>/dev/null | grep -iq "LLD\s*[0-9]"; then
    _extra_lto_flag='-D b_lto_mode=thin'
  fi

}

pkgver() {

  cd "${srcdir:?}/egl-wayland" || (
    echo -e "\E[1;31mCan't cd to ${srcdir:?}/egl-wayland directory! PkgVer Failed! \E[0m"
    exit 1
  )

  git describe --tags | sed 's/[^-]*-g/r&/;s/-/+/g'

}

build() {

  meson setup egl-wayland build \
    --prefix /usr \
    --libexecdir lib \
    --sbindir bin \
    --auto-features enabled \
    --wrap-mode nodownload \
    -D debug=false \
    -D optimization=2 \
    -D b_ndebug=true \
    -D b_lto=true ${_extra_lto_flag} \
    -D b_pie=true

  meson compile -C build

}

check() {

  meson test -C build --print-errorlogs

}

package() {

  DESTDIR="${pkgdir:?}" meson install -C build
  install -Dt "${pkgdir:?}/usr/share/egl/egl_external_platform.d" -m644 10_nvidia_wayland.json
  install -Dt "${pkgdir:?}/usr/share/licenses/${pkgname}" -m644 egl-wayland/COPYING

}
