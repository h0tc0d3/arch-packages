pkgname=julia+clang
epoch=2
pkgver=1.7.3
pkgrel=2
arch=(x86_64)
pkgdesc='High-level, high-performance, dynamic programming language'
url='https://julialang.org/'
license=(MIT)
depends=(cblas fftw hicolor-icon-theme libgit2 libunwind libutf8proc openblas
  suitesparse mbedtls openlibm pcre2 llvm-libs p7zip libblastrampoline)
makedepends=(cmake gcc-fortran python llvm patchelf libwhich)
optdepends=('gnuplot: If using the Gaston Package from julia')
replaces=(julia-docs)
source=(
  "https://github.com/JuliaLang/julia/releases/download/v${pkgver}/julia-${pkgver}-full.tar.gz"{,.asc}
  https://github.com/JuliaLang/julia/commit/677ce6d3.patch
  https://github.com/JuliaLang/julia/commit/47f9139e.patch
  https://github.com/JuliaLang/julia/commit/1eb063f1.patch
  https://github.com/JuliaLang/julia/commit/99d4e655.patch
  f8c918b0.patch
  63303980.patch
  ed9851b0.patch
  144ebbaf.patch
  074d761f.patch
  julia-libgit-1.2.patch
  julia-libgit-1.4.patch
  julia-system-cblas.patch
  julia-hardcoded-libs.patch
  make-install-no-build.patch
  julia-libunwind-1.6.patch
  julia-libblastrampoline-4.patch
  julia-gcc-12.patch
)
backup=(etc/julia/startup.jl)
sha256sums=('4be529b0716de1ec48ba52e83a0fafd4be2269be9cc43074ad15ce788aeca093'
  'SKIP'
  'a798c58ab518def84e4112538de59a10802e7dc854c20b08990a1619ba2aa95b'
  'c76c6fbb4e04b185d11e3c3e0aec99a2088f3b06621ce61d29cd21227a044a7a'
  '37130eabce304a01c1de389b4596905a3f33881f46f3f04a87f0738668e13985'
  'b6ea2d6b2cfa8cd9a8903fd25d609544710f25bb3074841c884459f62e8dc74a'
  'bc6c85cbbca489ef0b2876dbeb6ae493c11573e058507b8bcb9e01273bc3a38c'
  '96303f5cb520e861c7fdc5eb6d64767b597ecf2057a0aa37250af546738da63e'
  '3f6f17c3cd876b110b21fbf251fb940d015526a62f27084623a93d9efb396aab'
  '0ca0236d819f8b21dc6b7fd8a4e6741f89d9507bcc401cfc69008d6bf2d33fcb'
  'f38eee6270937843bb7cbcbdeb785bd9031189fb9d39a744206259160f5ee1ed'
  '40e1f46415a7241c1258d2e9d01890455ac728879a5cc6bb1d8f57d6e1f7a69a'
  'cfe498a090d0026b92f9db4ed65ac3818c2efa5ec83bcefed728d27abff73081'
  '8f8c12853ce847f5d1b5a4a461ddec701decdb81dae7bb31d66560c1deaed97a'
  '03043f005c133ac9af1d4dc113ea8b525ad3b393690625be77975f0e29dd6457'
  '8be4605f92a009072ca7e843549c225fc4e959893498e7c4f8f79e861e63714d'
  '3afa172e8b54ce48e77542677b2b7143199d444bfeed39be1644ce88b513a3d0'
  '7077a4321eab9b4b67efdfc80dfa6acac1f88bd45f2f55c417a19e50019ee4f2'
  'b09084f3f230205616f0ac7d553f89dd69fa85f959c61f7c54e6c02471bfd881')
validpgpkeys=('3673DF529D9049477F76B37566E3C7DC03D6E495') # Julia (Binary signing key) <buildbot@julialang.org>

_llvm=0

_patch() {

  echo -e "\E[1;33m Apply patch: ${1}\E[0m"
  patch -p1 -i "${srcdir:?}/${1}"

}

prepare() {

  cd "julia-${pkgver}"

  # LLVM 13
  _patch 677ce6d3.patch
  _patch 47f9139e.patch
  _patch 1eb063f1.patch
  _patch f8c918b0.patch
  _patch 63303980.patch
  _patch 99d4e655.patch
  # Fixes for LLVM 14
  _patch ed9851b0.patch
  _patch 144ebbaf.patch
  _patch 074d761f.patch
  # libgit2 1.2 compatibility
  _patch julia-libgit-1.2.patch
  # libgit2 1.4 compatibility
  _patch julia-libgit-1.4.patch
  # libunwind 1.6 compatibility
  _patch julia-libunwind-1.6.patch
  # Add and use option to build with system cblas
  _patch julia-system-cblas.patch # Add and use option to build with system cblas
  # Don't hardcode library names
  _patch julia-hardcoded-libs.patch
  # Don't build again in install
  _patch make-install-no-build.patch
  # Fix test failure
  sed -e 's|0.22314355f0 + 3.1415927f0im|0.22314355f0 - 3.1415927f0im|' -i stdlib/LinearAlgebra/test/lu.jl
  # Port to libblastrampoline 4 API
  _patch julia-libblastrampoline-4.patch
  # Fix failures with GCC 12 https://github.com/JuliaLang/julia/pull/45249
  _patch julia-gcc-12.patch

}

_buildopts="prefix=/usr \
    bindir=/usr/bin \
    sysconfdir=/etc \
    libexecdir=/usr/lib \
    USE_BINARYBUILDER=0 \
    USE_SYSTEM_CSL=1 \
    USE_SYSTEM_LLVM=1 \
    USE_SYSTEM_LIBUNWIND=1 \
    USE_SYSTEM_PCRE=1 \
    USE_SYSTEM_BLAS=1 \
    USE_SYSTEM_LAPACK=1 \
    USE_SYSTEM_GMP=1 \
    USE_SYSTEM_MPFR=1 \
    USE_SYSTEM_LIBSUITESPARSE=1 \
    USE_SYSTEM_LIBBLASTRAMPOLINE=1 \
    USE_SYSTEM_LIBWHICH=1 \
    USE_SYSTEM_DSFMT=0 \
    USE_SYSTEM_LIBUV=0 \
    USE_SYSTEM_UTF8PROC=1 \
    USE_SYSTEM_LIBGIT2=1 \
    USE_SYSTEM_LIBSSH2=1 \
    USE_SYSTEM_MBEDTLS=1 \
    USE_SYSTEM_CURL=1 \
    USE_SYSTEM_PATCHELF=1 \
    USE_SYSTEM_ZLIB=1 \
    USE_SYSTEM_P7ZIP=1 \
    USE_SYSTEM_OPENLIBM=1 \
    MARCH=x86-64"

build() {

  cd "julia-${pkgver}"

  CFLAGS=${CFLAGS/-fstack-protector-strong --param ssp-buffer-size=4 -fstack-clash-protection/}
  CXXFLAGS=${CXXFLAGS/-fstack-protector-strong --param ssp-buffer-size=4 -fstack-clash-protection/}

  make release VERBOSE=1 JLDFLAGS="${LDFLAGS}" ${_buildopts}

}

check() {

  cd "julia-${pkgver}/test"

  # this is the make testall target, plus the --skip option from
  # travis/appveyor/circleci (one test fails with DNS resolution errors)
  # Also skip tests that check for a hardcoded version number
  ../julia --check-bounds=yes --startup-file=no ./runtests.jl \
    --skip Sockets \
    --skip broadcast \
    --skip Distributed \
    --skip nghttp2_jll \
    --skip GMP_jll \
    --skip LibCURL \
    --skip LibSSH2_jll \
    --skip MbedTLS_jll \
    --skip MPFR_jll \
    --skip SuiteSparse_jll \
    --skip PCRE2_jll \
    --skip LibGit2_jll \
    --skip Zlib_jll \
    --skip MozillaCACerts_jll \
    --skip NetworkOptions \
    --skip Downloads

  find ../stdlib \( -name \*.cov -o -name \*.mem \) -delete

  rm -fr ../stdlib/Artifacts/test/artifacts

}

package() {

  cd "julia-${pkgver}"

  make DESTDIR="${pkgdir:?}" install ${_buildopts}

  ln -s /usr/lib/libopenblas.so "${pkgdir:?}/usr/lib/julia/libopenblas64_.so" # Needed by some 3rd party packages

  rm "${pkgdir:?}/usr/lib/julia/libccalltest.so.debug" # Remove debug testing library
  install -Dm644 LICENSE.md -t "${pkgdir:?}/usr/share/licenses/julia"

}
