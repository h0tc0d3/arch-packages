pkgname=valgrind+clang
pkgver=3.19.0
pkgrel=5
pkgdesc='Tool to help find memory-management problems in programs'
arch=('x86_64')
license=('GPL')
url='http://valgrind.org/'
depends=('glibc' 'perl' 'debuginfod')
makedepends=('gdb' 'lib32-glibc' 'lib32-gcc-libs' 'docbook-xml'
  'docbook-xsl' 'docbook-sgml')
checkdepends=('procps-ng')
optdepends=('lib32-glibc: 32-bit ABI support')
provides=('valgrind-multilib' 'valgrind' "valgrind=${pkgver}")
replaces=('valgrind-multilib')
conflicts=('valgrind')
options=('!emptydirs')
source=(
  "https://sourceware.org/pub/valgrind/valgrind-${pkgver}.tar.bz2"{,.asc}
  valgrind-3.7.0-respect-flags.patch
  valgrind-cxx17.patch
)
validpgpkeys=(
  0E9FFD0C16A1856CF9C7C690BA0166E698FA6035 # Julian Seward <jseward@acm.org>
  EC3CFE88F6CA0788774F5C1D1AA44BE649DE760A # Mark Wielaard <mjw@gnu.org>
)
sha256sums=('dd5e34486f1a483ff7be7300cc16b4d6b24690987877c3278d797534d6738f02'
  'SKIP'
  '4e6be3a1799c17a6e843ab1966a3a68ac0ffa83d4b2230ce1b607518c42a31a2'
  '9416b0f07cd6c23fdcfb786e8d9b1cf3d997eea17b0295af31a016857ecf43a4')

_llvm=0

prepare() {

  if clang --version 2>/dev/null | grep -iq "clang\s*version\s*[0-9]" && ld.lld --version 2>/dev/null | grep -iq "LLD\s*[0-9]"; then
    _llvm=1
  fi

  cd "${srcdir:?}/valgrind-${pkgver}" || (
    echo -e "\E[1;31mCan't cd to ${srcdir:?}/valgrind-${pkgver} directory! Prepare Failed! \E[0m"
    exit 1
  )

  patch -p1 -i "${srcdir:?}/valgrind-3.7.0-respect-flags.patch"
  sed -i 's|sgml/docbook/xsl-stylesheets|xml/docbook/xsl-stylesheets-1.79.2-nons|' docs/Makefile.am

  patch -p1 -i "${srcdir:?}/valgrind-cxx17.patch"

  autoreconf -fiv

}

build() {

  # valgrind does not like some of our flags
  CPPFLAGS=${CPPFLAGS/-D_FORTIFY_SOURCE=2/}

  CFLAGS=${CFLAGS/-fno-plt/}
  CXXFLAGS=${CXXFLAGS/-fno-plt/}

  CFLAGS=${CFLAGS/-fstack-clash-protection/}
  CXXFLAGS=${CXXFLAGS/-fstack-clash-protection/}

  CFLAGS=${CFLAGS/-fstack-protector-strong/}
  CXXFLAGS=${CXXFLAGS/-fstack-protector-strong/}

  CFLAGS=${CFLAGS/--param ssp-buffer-size=4/}
  CXXFLAGS=${CXXFLAGS/--param ssp-buffer-size=4/}

  if [[ ${_llvm} -eq 1 ]]; then

    LDFLAGS="${LDFLAGS} -fuse-ld=lld"

  fi

  cd "${srcdir:?}/valgrind-${pkgver}" || (
    echo -e "\E[1;31mCan't cd to ${srcdir:?}/valgrind-${pkgver} directory! Build Failed! \E[0m"
    exit 1
  )

  ./configure \
    --prefix=/usr \
    --sysconfdir=/etc \
    --localstatedir=/var \
    --libexecdir=/usr/lib \
    --mandir=/usr/share/man

  make
  make -C docs man-pages

}

check() {

  cd "${srcdir:?}/valgrind-${pkgver}" || (
    echo -e "\E[1;31mCan't cd to ${srcdir:?}/valgrind-${pkgver} directory! Check Failed! \E[0m"
    exit 1
  )

  # Make sure a basic binary runs. There should be no errors.
  ./vg-in-place --error-exitcode=1 /bin/true

  # Make sure no extra FLAGS leak through, the testsuite
  # sets all flags necessary. See also configure above.
  make check CPPFLAGS= CFLAGS= CXXFLAGS= LDFLAGS=

  # XXX: run full regtest but only report issues some tests fail duo
  # current toolchain and expectations, take a manual look if its fine
  #echo "===============TESTING==================="
  #make regtest || true

  # Make sure test failures show up in build.log
  # Gather up the diffs (at most the first 20 lines for each one)
  #local f max_lines=20 diff_files=()
  #mapfile -d '' diff_files < <(find . -name '*.diff' -print0 | sort -z)
  #if (( ${#diff_files[@]} == 0 )); then
  #echo "Congratulations, all tests passed!"
  #else
  #warning "Some tests failed!"
  #for f in "${diff_files[@]}"; do
  #echo "================================================="
  #echo "${f}"
  #echo "================================================="
  #if (( $(wc -l < "${f}") < ${max_lines} )); then
  #cat "${f}"
  #else
  #head -n ${max_lines} "${f}"
  #echo "<truncated beyond ${max_lines} lines>"
  #fi
  #done | tee diffs
  #fi
  #echo "===============END TESTING==============="

}

package() {

  cd "${srcdir:?}/valgrind-${pkgver}" || (
    echo -e "\E[1;31mCan't cd to ${srcdir:?}/valgrind-${pkgver} directory! Package Failed! \E[0m"
    exit 1
  )

  make DESTDIR="${pkgdir:?}" install

  install -Dm644 docs/*.1 -t "${pkgdir:?}/usr/share/man/man1"

  if check_option 'debug' n; then
    find "${pkgdir:?}/usr/bin" -type f -executable -exec strip $STRIP_BINARIES {} + || :
  fi

}
