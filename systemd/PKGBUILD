pkgbase=systemd+clang
pkgname=('systemd+clang' 'systemd-libs+clang' 'systemd-resolvconf+clang' 'systemd-sysvcompat+clang')
_tag='46cf27a20eb6fb676ac987533415d499b77dd0af' # git rev-parse v${_tag_name}
_tag_name=251.4
pkgver="${_tag_name/-/}"
pkgrel=1
arch=('x86_64')
url='https://www.github.com/systemd/systemd'
makedepends=(
  'acl' 'cryptsetup' 'docbook-xsl' 'gperf' 'lz4' 'xz' 'pam' 'libelf'
  'intltool' 'iptables' 'kmod' 'libcap' 'libidn2' 'libgcrypt' 'gnu-efi'
  'libmicrohttpd' 'libxcrypt' 'libxslt' 'util-linux' 'linux-api-headers'
  'python-jinja' 'python-lxml' 'quota-tools' 'shadow' 'gnu-efi-libs' 'git'
  'meson' 'libseccomp' 'pcre2' 'audit' 'kexec-tools' 'libxkbcommon'
  'bash-completion' 'p11-kit' 'systemd' 'libfido2' 'tpm2-tss' 'rsync' 'libselinux'
)
validpgpkeys=(
  '63CDA1E5D3FC22B998D20DD6327F26951A015CC4' # Lennart Poettering <lennart@poettering.net>
  'A9EA9081724FFAE0484C35A1A81CEA22BC8C7E2E' # Luca Boccassi <luca.boccassi@gmail.com>
  '5C251B5FC54EB2F80F407AAAC54CA336CFEB557E' # Zbigniew JÄ™drzejewski-Szmek <zbyszek@in.waw.pl>
)
source=("git+https://github.com/systemd/systemd-stable#tag=${_tag}?signed"
  "git+https://github.com/systemd/systemd#tag=v${_tag_name%.*}?signed"
  '0001-Use-Arch-Linux-device-access-groups.patch'
  'initcpio-hook-udev'
  'initcpio-install-systemd'
  'initcpio-install-udev'
  'arch.conf'
  'loader.conf'
  'splash-arch.bmp'
  'systemd-user.pam'
  'systemd-hook'
  '20-systemd-sysusers.hook'
  '30-systemd-binfmt.hook'
  '30-systemd-catalog.hook'
  '30-systemd-daemon-reload.hook'
  '30-systemd-hwdb.hook'
  '30-systemd-sysctl.hook'
  '30-systemd-tmpfiles.hook'
  '30-systemd-udev-reload.hook'
  '30-systemd-update.hook')
sha256sums=('SKIP'
  'SKIP'
  '266cb1cffb4491d62eb62cd680de4288d57aff31e77b7b1af1c6b419fccedbfc'
  '5227c9bd463ae9f967a1ffbbf5f95da3c53461eb9fab97ab894fc3a2f56fe96a'
  '48007e412f49a26823154312e76080d81e3b3c4d699deb0a17b81f4fa4421b98'
  '4cfed7987fd43032960bdf4aee95f30d0e74b78cbdd11ca11aa79ecb52b004ef'
  'e81d73077046628ba495ed07abfc819ea270d773fe806b3ff0af527a2c6b5d42'
  '77ca6618c5e04c136eff8ddfb738a5de0742cb375edfa02b959a125024b8bf46'
  'd0ec3070db1f29799adbc8be8a26341290d2df4bf35939a5adce8e7947bad3bf'
  'd51eddf2503c7f4b971c755a22391c3dbd1c41dd984a202a66c613436e43bd31'
  '46bc9d0259b503e97bdf75aa23e8277aef7813fd7bc76b9daac1741d1d30f3d4'
  'f55162dc55268aa3850ef410aa1e444defa0f68b996e415c8b8bc04d63053e7a'
  'a938701f4244ebdc4ae88ed0032a8315b68f086c6e45d9f2e34ef9442a8f6b47'
  'be3c749ed51ee26c8412e0304a41ac5e00e668f4d5227b5f359a3b0c31d18d5d'
  'e112fab7ff7134df71580617d03c59ce0cd74540facece6fa40ba05e4644e9bd'
  'b19b23467dc33b3e8267cabea10726b0d181e0de1b491ec538b9fb620bccf57f'
  '1af0fbaeaf974fe3d8409854179fac68e8461524dd49849b7e889374363ce3c9'
  '3cfdc3c21d32cc35b1315f4ff4df87238bc7d2c27bdcf4e5a70600832c481e95'
  'f6364443609b1d5a07f385e7228ace0eae5040ae3bbd4e00ed5033ef1b19e4b9'
  '1090b7b1edba2042298b609a77bbe122982ca936208408fb79d77b33a2f3c27a')

_backports=()

_reverts=()

_extra_lto_flag=""

prepare() {

  if clang --version 2>/dev/null | grep -iq "clang\s*version\s*[0-9]" && ld.lld --version 2>/dev/null | grep -iq "LLD\s*[0-9]"; then
    _extra_lto_flag='-D b_lto_mode=thin'
  fi

  cd "systemd-stable" || exit 1

  # add upstream repository for cherry-picking
  git remote add -f upstream ../systemd

  local _c
  for _c in "${_backports[@]}"; do
    if [[ ${_c} == *..* ]]; then
      git log --oneline --reverse "${_c}"
    else
      git log --oneline -1 "${_c}"
    fi
    git cherry-pick -n "${_c}"
  done
  for _c in "${_reverts[@]}"; do
    git log --oneline -1 "${_c}"
    git revert -n "${_c}"
  done

  # Replace cdrom/dialout/tape groups with optical/uucp/storage
  patch -Np1 -i ../0001-Use-Arch-Linux-device-access-groups.patch

}

build() {

  local _timeservers=({0..3}.arch.pool.ntp.org)

  local _nameservers=(
    # We use these public name services, ordered by their
    # privacy policy (hopefully):
    #  * Quad9 with filtering (https://www.quad9.net/)
    #  * Google (https://developers.google.com/speed/public-dns/)
    2001:4860:4860::8888#dns.google
    2001:4860:4860::8844#dns.google
    2620:fe::fe#dns.quad9.net
    2620:fe::9#dns.quad9.net
    8.8.8.8#dns.google
    4.4.4.4#dns.google
    9.9.9.9#dns.quad9.net
    149.112.112.112#dns.quad9.net
  )

  # We disable DNSSEC by default, it still causes trouble:
  # https://github.com/systemd/systemd/issues/10579

  meson setup "systemd-stable" build \
    --prefix /usr \
    --libexecdir lib \
    --sbindir bin \
    --auto-features enabled \
    --wrap-mode=nodownload \
    -D debug=false \
    -D optimization=2 \
    -D b_ndebug=true \
    -D b_lto=true ${_extra_lto_flag} \
    -D b_pie=true \
    -D version-tag="${_tag_name/-/\~}-${pkgrel}-arch" \
    -D mode=release \
    -D selinux=true \
    -D audit=true \
    -D gnu-efi=true \
    -D efi-libdir=/usr/lib \
    -D ima=false \
    -D libidn2=true \
    -D lz4=true \
    -D man=true \
    -D dbuspolicydir=/usr/share/dbus-1/system.d \
    -D default-dnssec=no \
    -D default-hierarchy=unified \
    -D default-kill-user-processes=false \
    -D default-locale='C.UTF-8' \
    -D localegen-path=/usr/bin/locale-gen \
    -D dns-over-tls=openssl \
    -D fallback-hostname='archlinux' \
    -D nologin-path=/usr/bin/nologin \
    -D ntp-servers="${_timeservers[*]}" \
    -D dns-servers="${_nameservers[*]}" \
    -D rpmmacrosdir=no \
    -D sysvinit-path= \
    -D sysvrcnd-path= \
    -D sbat-distro='arch' \
    -D sbat-distro-summary='Arch Linux' \
    -D sbat-distro-pkgname="systemd+clang" \
    -D sbat-distro-version="${pkgver}" \
    -D sbat-distro-url="systemd+clang"

  meson compile -C build

}

check() {

  meson test -C build

}

package_systemd+clang() {

  pkgdesc='system and service manager'
  license=('GPL2' 'LGPL2.1')
  depends=('acl' 'libacl.so' 'bash' 'cryptsetup' 'libcryptsetup.so' 'dbus'
    'iptables' 'kbd' 'kmod' 'libkmod.so' 'hwdata' 'libcap' 'libcap.so'
    'libgcrypt' 'libxcrypt' 'libcrypt.so' 'systemd-libs+clang' 'libidn2' 'lz4' 'pam'
    'libelf' 'libseccomp' 'libseccomp.so' 'util-linux' 'libblkid.so'
    'libmount.so' 'xz' 'pcre2' 'audit' 'libaudit.so' 'libp11-kit'
    'libp11-kit.so' 'openssl'
  )
  provides=('systemd' "systemd=${pkgver}" 'nss-myhostname' "systemd-tools=${pkgver}" "udev=${pkgver}")
  replaces=('nss-myhostname' 'systemd-tools' 'udev')
  conflicts=('systemd' 'nss-myhostname' 'systemd-tools' 'udev')
  optdepends=('libmicrohttpd: remote journald capabilities'
    'quota-tools: kernel-level quota management'
    'systemd-sysvcompat: symlink package to provide sysvinit binaries'
    'polkit: allow administration as unprivileged user'
    'curl: machinectl pull-tar and pull-raw'
    'libfido2: unlocking LUKS2 volumes with FIDO2 token'
    'tpm2-tss: unlocking LUKS2 volumes with TPM2')
  backup=(etc/pam.d/systemd-user
    etc/systemd/coredump.conf
    etc/systemd/homed.conf
    etc/systemd/journald.conf
    etc/systemd/journal-remote.conf
    etc/systemd/journal-upload.conf
    etc/systemd/logind.conf
    etc/systemd/networkd.conf
    etc/systemd/oomd.conf
    etc/systemd/pstore.conf
    etc/systemd/resolved.conf
    etc/systemd/sleep.conf
    etc/systemd/system.conf
    etc/systemd/timesyncd.conf
    etc/systemd/user.conf
    etc/udev/udev.conf)

  install=systemd.install

  DESTDIR="${pkgdir:?}" meson install -C build

  # we'll create this on installation
  rmdir "${pkgdir:?}"/var/log/journal/remote

  # runtime libraries shipped with systemd-libs
  install -d -m0755 systemd-libs
  mv "${pkgdir:?}"/usr/lib/lib{nss,systemd,udev}*.so* systemd-libs

  # manpages shipped with systemd-sysvcompat
  rm "${pkgdir:?}"/usr/share/man/man8/{halt,poweroff,reboot,shutdown}.8

  # executable (symlinks) shipped with systemd-sysvcompat
  rm "${pkgdir:?}"/usr/bin/{halt,init,poweroff,reboot,shutdown}

  # files shipped with systemd-resolvconf
  rm "${pkgdir:?}"/usr/{bin/resolvconf,share/man/man1/resolvconf.1}

  # avoid a potential conflict with [core]/filesystem
  rm "${pkgdir:?}"/usr/share/factory/etc/{issue,nsswitch.conf}
  sed -i -e '/^C \/etc\/nsswitch\.conf/d' \
    -e '/^C \/etc\/issue/d' "${pkgdir:?}"/usr/lib/tmpfiles.d/etc.conf

  # ship default policy to leave services disabled
  echo 'disable *' >"${pkgdir:?}"/usr/lib/systemd/system-preset/99-default.preset

  # add mkinitcpio hooks
  install -D -m0644 initcpio-install-systemd "${pkgdir:?}"/usr/lib/initcpio/install/systemd
  install -D -m0644 initcpio-install-udev "${pkgdir:?}"/usr/lib/initcpio/install/udev
  install -D -m0644 initcpio-hook-udev "${pkgdir:?}"/usr/lib/initcpio/hooks/udev

  # The group 'systemd-journal' is allocated dynamically and may have varying
  # gid on different systems. Let's install with gid 0 (root), systemd-tmpfiles
  # will fix the permissions for us. (see /usr/lib/tmpfiles.d/systemd.conf)
  install -d -o root -g root -m 2755 "${pkgdir:?}"/var/log/journal

  # match directory owner/group and mode from [extra]/polkit
  install -d -o root -g 102 -m 0750 "${pkgdir:?}"/usr/share/polkit-1/rules.d

  # add example bootctl configuration
  install -D -m0644 arch.conf "${pkgdir:?}"/usr/share/systemd/bootctl/arch.conf
  install -D -m0644 loader.conf "${pkgdir:?}"/usr/share/systemd/bootctl/loader.conf
  install -D -m0644 splash-arch.bmp "${pkgdir:?}"/usr/share/systemd/bootctl/splash-arch.bmp

  # pacman hooks
  install -D -m0755 systemd-hook "${pkgdir:?}"/usr/share/libalpm/scripts/systemd-hook
  install -D -m0644 -t "${pkgdir:?}"/usr/share/libalpm/hooks *.hook

  # overwrite the systemd-user PAM configuration with our own
  install -D -m0644 systemd-user.pam "${pkgdir:?}"/etc/pam.d/systemd-user

}

package_systemd-libs+clang() {

  pkgdesc='systemd client libraries'
  depends=('glibc' 'libcap' 'libgcrypt' 'libp11-kit' 'lz4' 'xz' 'zstd')
  license=('LGPL2.1')
  provides=('systemd-libs' "systemd-libs=${pkgver}" 'libsystemd' 'libsystemd.so' 'libudev.so')
  conflicts=('systemd-libs' 'libsystemd')
  replaces=('libsystemd')

  install -d -m0755 "${pkgdir:?}"/usr
  mv systemd-libs "${pkgdir:?}"/usr/lib

}

package_systemd-resolvconf+clang() {

  pkgdesc='systemd resolvconf replacement (for use with systemd-resolved)'
  license=('LGPL2.1')
  depends=('systemd+clang')
  provides=('systemd-resolvconf' "systemd-resolvconf=${pkgver}" 'openresolv' 'resolvconf')
  conflicts=('systemd-resolvconf' 'openresolv')

  install -d -m0755 "${pkgdir:?}"/usr/bin
  ln -s resolvectl "${pkgdir:?}"/usr/bin/resolvconf

  install -d -m0755 "${pkgdir:?}"/usr/share/man/man1
  ln -s resolvectl.1.gz "${pkgdir:?}"/usr/share/man/man1/resolvconf.1.gz

}

package_systemd-sysvcompat+clang() {

  pkgdesc='sysvinit compat for systemd'
  license=('GPL2')
  provides=('systemd-sysvcompat' "systemd-sysvcompat=${pkgver}")
  conflicts=('systemd-sysvcompat' 'sysvinit')
  depends=('systemd+clang')

  install -D -m0644 -t "${pkgdir:?}"/usr/share/man/man8 \
    build/man/{halt,poweroff,reboot,shutdown}.8

  install -d -m0755 "${pkgdir:?}"/usr/bin
  ln -s ../lib/systemd/systemd "${pkgdir:?}"/usr/bin/init
  for tool in halt poweroff reboot shutdown; do
    ln -s systemctl "${pkgdir:?}"/usr/bin/$tool
  done

}
