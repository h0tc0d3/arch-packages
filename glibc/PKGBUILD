pkgbase=glibc
pkgname=(glibc lib32-glibc)
pkgver=2.36
pkgrel=1
arch=(x86_64)
url='https://www.gnu.org/software/libc'
license=(GPL LGPL)
makedepends=(git gd lib32-gcc-libs gcc-libs python)
optdepends=('perl: for mtrace')
options=(!strip staticlibs)
_commit=33f1b4c1452b33991e670f636ebe98b90a405e10
source=("git+https://sourceware.org/git/glibc.git#commit=${_commit}"
  locale-gen
  sdt.h sdt-config.h
  glibc-newlocale-error.patch
  glibc-cs-path.patch
)
validpgpkeys=(
  7273542B39962DF7B299931416792B4EA25340F8 # Carlos O'Donell
  BC7C7372637EC10C57D7AA6579C43DFBF1CF2187 # Siddhesh Poyarekar
)
sha256sums=('SKIP'
  '83f108f915863c7ed0338e2d3e8f2e071a531a090ef8f8b2eb3a956a3c4f04d7'
  '774061aff612a377714a509918a9e0e0aafce708b87d2d7e06b1bd1f6542fe70'
  'cdc234959c6fdb43f000d3bb7d1080b0103f4080f5e67bcfe8ae1aaf477812f0'
  '733396588e1e7c356f8d33ba80f6c317963dd936f9039f3f77f0bcec81138159'
  'bf4a09560dbcd1cdffb4d083013b6daa3303b2857d38829ac0f2a1ef13091e80')

_patch() {

  echo -e "\E[1;33m Apply patch: ${1}\E[0m"
  patch -p1 -i "${srcdir:?}/${1}"

}

_lld=0

prepare() {

  mkdir -p glibc-build lib32-glibc-build

  [[ -d glibc-${pkgver} ]] && ln -s glibc-${pkgver} glibc

  cd glibc || exit 1

  _patch glibc-newlocale-error.patch
  _patch glibc-cs-path.patch

  if ld.lld --version 2>/dev/null | grep -iq "LLD\s*[0-9]"; then
    _lld=0 # tempory disable
  fi

}

build() {

  local _configure_flags=(
    --prefix=/usr
    --with-headers=/usr/include
    --with-bugurl=https://bugs.archlinux.org/
    --enable-bind-now
    --enable-tunables
    --enable-kernel=5.10.1
    --enable-multi-arch
    --enable-stack-protector=strong
    --enable-systemtap
    --disable-build-nscd
    --disable-nscd
    --disable-lock-elision
    --disable-profile
    --disable-crypt
    --disable-werror
  )

  cd "${srcdir:?}/glibc-build" || exit 1

  {
    echo "slibdir=/usr/lib"
    echo "rtlddir=/usr/lib"
    echo "sbindir=/usr/bin"
    echo "rootsbindir=/usr/bin"
  } >configparms

  # remove fortify for building libraries
  CPPFLAGS=${CPPFLAGS/-D_FORTIFY_SOURCE=2/}
  CFLAGS=${CFLAGS/-Wp,-D_FORTIFY_SOURCE=2/}

  if [[ ${_lld} -eq 1 ]]; then
    BUILD_CC="gcc" CC="gcc -Wl,-fuse-ld=lld" CXX="gcc++ -Wl,-fuse-ld=lld" \
      "${srcdir:?}/glibc/configure" \
      --libdir=/usr/lib \
      --libexecdir=/usr/lib \
      ${_configure_flags[@]}
  else
    "${srcdir:?}/glibc/configure" \
      --libdir=/usr/lib \
      --libexecdir=/usr/lib \
      ${_configure_flags[@]}
  fi

  # build libraries with fortify disabled
  echo "build-programs=no" >>configparms
  make

  # re-enable fortify for programs
  sed -i "/build-programs=/s#no#yes#" configparms
  echo "CFLAGS += -Wp,-D_FORTIFY_SOURCE=2" >>configparms
  make

  # build info pages manually for reprducibility
  make info

  cd "${srcdir:?}/lib32-glibc-build" || exit 1

  {
    echo "slibdir=/usr/lib32"
    echo "rtlddir=/usr/lib32"
    echo "sbindir=/usr/bin"
    echo "rootsbindir=/usr/bin"
  } >configparms

  if [[ ${_lld} -eq 1 ]]; then
    BUILD_CC="gcc" CC="gcc -m32 -Wl,-fuse-ld=lld" CXX="g++ -m32 -Wl,-fuse-ld=lld" \
      "${srcdir:?}/glibc/configure" \
      --host=i686-pc-linux-gnu \
      --libdir=/usr/lib32 \
      --libexecdir=/usr/lib32 \
      ${_configure_flags[@]}
  else
    BUILD_CC="gcc" CC="gcc -m32 -mstackrealign" CXX="g++ -m32 -mstackrealign" \
      "${srcdir:?}/glibc/configure" \
      --host=i686-pc-linux-gnu \
      --libdir=/usr/lib32 \
      --libexecdir=/usr/lib32 \
      ${_configure_flags[@]}
  fi

  # build libraries with fortify disabled
  echo "build-programs=no" >>configparms
  make

  # re-enable fortify for programs
  sed -i "/build-programs=/s#no#yes#" configparms
  echo "CFLAGS += -Wp,-D_FORTIFY_SOURCE=2" >>configparms
  make

}

disable_test() {

  sed -i "s/\b${1:?}\b//" "${srcdir:?}/glibc/${2:?}"

}

check() {

  cd glibc-build || exit 1

  # adjust/remove buildflags that cause false-positive testsuite failures
  sed -i '/FORTIFY/d' configparms                                   # failure to build testsuite
  sed -i 's/-Werror=format-security/-Wformat-security/' config.make # failure to build testsuite
  sed -i '/CFLAGS/s/-fno-plt//' config.make                         # 16 failures
  sed -i '/CFLAGS/s/-fexceptions//' config.make                     # 1 failure
  LDFLAGS=${LDFLAGS/,-z,now/}                                       # 10 failures

  # The following tests fail due to restrictions in the Arch build system
  # The correct fix is to add the following to the systemd-nspawn call:
  # --capability=CAP_IPC_LOCK --system-call-filter="@clock @pkey"
  disable_test test-errno-linux sysdeps/unix/sysv/linux/Makefile
  disable_test tst-ntp_gettime sysdeps/unix/sysv/linux/Makefile
  disable_test tst-ntp_gettimex sysdeps/unix/sysv/linux/Makefile
  disable_test tst-mlock2 sysdeps/unix/sysv/linux/Makefile
  disable_test tst-pkey sysdeps/unix/sysv/linux/Makefile
  disable_test tst-adjtime time/Makefile
  disable_test tst-clock2 time/Makefile

  make check

}

package_glibc() {

  pkgdesc='GNU C Library'
  depends=('linux-api-headers>=5.10' tzdata filesystem)
  optdepends=('gd: for memusagestat')
  install=glibc.install
  backup=(etc/gai.conf etc/locale.gen)

  install -dm755 "${pkgdir:?}/etc"
  touch "${pkgdir:?}/etc/ld.so.conf"

  make -C glibc-build install_root="${pkgdir:?}" install
  rm -f "${pkgdir:?}/etc/ld.so."{cache,conf}

  # Shipped in tzdata
  rm -f "${pkgdir:?}/usr/bin/"{tzselect,zdump,zic}

  cd glibc || exit 1

  install -dm755 "${pkgdir:?}/usr/lib/"{locale,systemd/system,tmpfiles.d}

  install -m644 posix/gai.conf "${pkgdir:?}/etc/gai.conf"

  install -m755 "${srcdir:?}/locale-gen" "${pkgdir:?}/usr/bin"

  # Create /etc/locale.gen
  mkdir -p "${pkgdir:?}/etc"
  cat <<'EOF' >"${pkgdir:?}/etc/locale.gen"
# Configuration file for locale-gen
#
# lists of locales that are to be generated by the locale-gen command.
#
# Each line is of the form:
#
#     <locale> <charset>
#
#  where <locale> is one of the locales given in /usr/share/i18n/locales
#  and <charset> is one of the character sets listed in /usr/share/i18n/charmaps
#
#  Examples:
#  en_US ISO-8859-1
#  en_US.UTF-8 UTF-8
#  de_DE ISO-8859-1
#  de_DE@euro ISO-8859-15
#
#  The locale-gen command will generate all the locales,
#  placing them in /usr/lib/locale.
#
#  A list of supported locales is included in this file.
#  Uncomment the ones you need.
#
EOF
  sed -e '1,3d' -e 's|/| |g' -e 's|\\| |g' -e 's|^|#|g' \
    "${srcdir:?}/glibc/localedata/SUPPORTED" >>"${pkgdir:?}/etc/locale.gen"

  if check_option 'debug' n; then

    find "${pkgdir:?}"/usr/bin -type f -executable -exec strip ${STRIP_BINARIES} {} + 2>/dev/null || true
    find "${pkgdir:?}"/usr/lib -name '*.a' -type f -exec strip ${STRIP_STATIC} {} + 2>/dev/null || true

    # Do not strip these for gdb and valgrind functionality, but strip the rest
    find "${pkgdir:?}"/usr/lib \
      -not -name 'ld-*.so' \
      -not -name 'libc-*.so' \
      -not -name 'libpthread-*.so' \
      -not -name 'libthread_db-*.so' \
      -name '*-*.so' -type f -exec strip ${STRIP_SHARED} {} + 2>/dev/null || true

  fi

  # Provide tracing probes to libstdc++ for exceptions, possibly for other
  # libraries too. Useful for gdb's catch command.
  install -Dm644 "${srcdir:?}/sdt.h" "${pkgdir:?}/usr/include/sys/sdt.h"
  install -Dm644 "${srcdir:?}/sdt-config.h" "${pkgdir:?}/usr/include/sys/sdt-config.h"

  # Provided by libxcrypt; keep the old shared library for backwards compatibility
  rm -f "${pkgdir:?}/usr/include/crypt.h" "${pkgdir:?}/usr/lib/libcrypt."{a,so}

}

package_lib32-glibc() {

  pkgdesc='GNU C Library (32-bit)'
  depends=("glibc=${pkgver}")
  options+=('!emptydirs')

  cd lib32-glibc-build || exit 1

  make install_root="${pkgdir:?}" install
  rm -rf "${pkgdir:?}/"{etc,sbin,usr/{bin,sbin,share},var}

  # We need to keep 32 bit specific header files
  find "${pkgdir:?}/usr/include" -type f -not -name '*-32.h' -delete

  # Dynamic linker
  install -d "${pkgdir:?}/usr/lib"
  ln -s ../lib32/ld-linux.so.2 "${pkgdir:?}/usr/lib/"

  # Add lib32 paths to the default library search path
  mkdir -p "${pkgdir:?}/etc/ld.so.conf.d"
  echo '/usr/lib32' >"${pkgdir:?}/etc/ld.so.conf.d/lib32-glibc.conf"

  # Symlink /usr/lib32/locale to /usr/lib/locale
  ln -s ../lib/locale "${pkgdir:?}/usr/lib32/locale"

  if check_option 'debug' n; then
    find "${pkgdir:?}"/usr/lib32 -name '*.a' -type f -exec strip ${STRIP_STATIC} {} + 2>/dev/null || true
    find "${pkgdir:?}"/usr/lib32 \
      -not -name 'ld-*.so' \
      -not -name 'libc-*.so' \
      -not -name 'libpthread-*.so' \
      -not -name 'libthread_db-*.so' \
      -name '*-*.so' -type f -exec strip ${STRIP_SHARED} {} + 2>/dev/null || true
  fi

  # Provided by lib32-libxcrypt; keep the old shared library for backwards compatibility
  rm -f "${pkgdir:?}/usr/lib32/libcrypt."{a,so}

}
